Copyright (C) 2017 Luca Saiu
Written by Luca Saiu

This file is part of the Jitter structured-language example, distributed
along with Jitter under the same license.

Jitter is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Jitter is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jitter.  If not, see <http://www.gnu.org/licenses/>.


About the structured language example
=====================================

This is a simple example of a structured high-level language running on a
Jittery VM.

The example includes a reasonable GNU-style build system, meant as a simple
example for users of Jitter.

The structured-language build system in this directory relies on Autoconf and
Automake but avoids, just for simplicity, Libtool, Gnulib, Texinfo and help2man.
Support for those tools could be added here in a perfectly canonical way, and in
fact they are all used in the Jitter build system itself, but this example is
meant to be minimal.

The main Jitter build system would not serve as a good example for the final
user who can afford to only deal with an already configured and installed
Jitter, which makes her task quite a lot simpler.


Documentation about Jitter and build systems
============================================

The Jitter manual explains about how to build Jittery VMs and embedding them in
build systems for other software, both using the GNU style and simpler makefiles
or one-off scripts.  [FIXME: not yet, but that will be added].


Generating files
================

Building configure for the example requires Jitter to be already installed.

From the example source directory, run

  autoreconf --install

This will generate a configure script, Makefile.in and a few other files.  The
source directory follows the GNU build system standard.
