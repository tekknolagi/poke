/* Jitter: host configuration header to install.

   Copyright (C) 2017 Luca Saiu
   Updated in 2019 by Luca Saiu
   Written by Luca Saiu

   This file is part of Jitter.

   Jitter is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   Jitter is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with Jitter.  If not, see <http://www.gnu.org/licenses/>. */


#ifndef JITTER_CONFIG_H_
#define JITTER_CONFIG_H_

/* This host-dependent file is installed and used in the definition of some
   fundamental types or features.  Macro names have a JITTER_ prefix in order to
   be safe for user code and prevent clashes.

   All of this is particularly useful for generated C code and templates, which
   must rely on information from an installed header rather than a configuration
   script.

   This file is included from both C and assembly, so it must contain only
   preprocessor directives.  In particular, differenly from C sources, it does
   not use "" characters for sectioning. */


/* C types and data representation: type availability, size, endianness.
 * ************************************************************************** */

#undef JITTER_HAVE_LONG_LONG_INT
#undef JITTER_HAVE_UNSIGNED_LONG_LONG_INT
#undef JITTER_HAVE_LONG_DOUBLE

#undef JITTER_SIZEOF_VOID_P
#undef JITTER_SIZEOF_SHORT
#undef JITTER_SIZEOF_INT
#undef JITTER_SIZEOF_LONG
#undef JITTER_SIZEOF_LONG_LONG

#undef JITTER_SIZEOF_FLOAT
#undef JITTER_SIZEOF_DOUBLE
#undef JITTER_SIZEOF_LONG_DOUBLE

#undef JITTER_WORDS_BIGENDIAN


/* Machine features.
 * ************************************************************************** */

#undef JITTER_HAVE_ASSEMBLY

/* It is convenient to let C code access the architecture name. */
#undef JITTER_ASSEMBLY_SUBDIRECTORY


/* Operating system features.
 * ************************************************************************** */

/* System triplets. */
#undef JITTER_HOST_TRIPLET
#undef JITTER_BUILD_TRIPLET

#undef JITTER_HOST_OS_IS_GNU

/* Binary format. */
#undef JITTER_HOST_OS_IS_ELF
#undef JITTER_HOST_OS_IS_COFF
#undef JITTER_HAVE_SECTION_NOTE_GNU_STACK

/* Assembler flavor. */
#undef JITTER_HOST_ASSEMBLER_IS_GNU


/* Libc features.
 * ************************************************************************** */

/* See configure.ac for the meaning of each macro. */
#undef JITTER_HAVE_MAP_ANONYMOUS
#undef JITTER_HAVE_SETRLIMIT
#undef JITTER_HAVE_ALARM
#undef JITTER_HAVE_FLOCKFILE
#undef JITTER_HAVE_POPEN


/* External library availability.
 * ************************************************************************** */

#undef JITTER_HAVE_GNU_READLINE


/* External utility availability, features and options.
 * ************************************************************************** */

#undef JITTER_OBJDUMP
#undef JITTER_CROSS_OBJDUMP
#undef JITTER_OBJDUMP_OPTIONS


/* Jitter feature selection.
 * ************************************************************************** */

/* These are needed by jitter.h when no dispatching-model CPP macros
   are defined from the command line. */
#undef JITTER_BEST_DISPATCHING_MODEL_IS_SWITCH
#undef JITTER_BEST_DISPATCHING_MODEL_IS_DIRECT_THREADING
#undef JITTER_BEST_DISPATCHING_MODEL_IS_MINIMAL_THREADING
#undef JITTER_BEST_DISPATCHING_MODEL_IS_NO_THREADING


/* Versioning.
 * ************************************************************************** */

#undef JITTER_PACKAGE_NAME
#undef JITTER_PACKAGE_VERSION
#undef JITTER_PACKAGE_BUGREPORT


/* Availability of GNU C features.
 * ************************************************************************** */

/* Define if the builtins for handling overflow are available. */
#undef JITTER_HAVE_GCC_OVERFLOW_CHECKING

/* Define if the C compilers supports GNU C attributes. */
#undef JITTER_HAVE_GNU_C_ATTRIBUTE

/* Define for specific GNU C attributes. */
#undef JITTER_HAVE_ATTRIBUTE_RETURNS_NONNULL


/* Optimization: machine-specific alternatives.
 * ************************************************************************** */

/* Define if a conditional expression based on the negative sign can be compiled
   more efficiently without branches. */
#undef JITTER_HAVE_FAST_STRAIGHT_LINE_NEGATIVITY

/* Define if there is an efficient way of masking off low-order bits by and-ing
   with a sign-extended immediate, or another one-instruction equivalent
   operation. */
#undef JITTER_HAVE_FAST_MASK_OFF

#endif // #ifndef JITTER_CONFIG_H_
